{"title":"Portal Migration","index":{"title":"Clay","description":"Learn how to migrate Portal to new Clay components.","content":" Brought to you by Liferay, Inc. Powered by WeDeploy™ new WOW().init(); ","srcFilePath":"src/pages/index.soy","id":"pages","location":"/./","url":"/./","children":{"docs":{"title":"Docs","url":"/docs/components/alerts.html","layout":false,"content":" ","srcFilePath":"src/pages/docs/index.soy","id":"docs","location":"/docs/","customURL":true,"children":{"search":{"description":"Documentation search results.","hidden":true,"title":"Search","content":" Electric Docs Start learning how to leverage the power of Electric. ","srcFilePath":"src/pages/docs/search.soy","id":"search","location":"/docs/search.html","url":"/docs/search.html"},"javascript":{"title":"Javascript","url":"/docs/javascript/jQuery.html","weight":2,"icon":"code","layout":false,"content":" ","srcFilePath":"src/pages/docs/javascript/index.soy","id":"javascript","location":"/docs/javascript/","customURL":true,"children":{"jQuery":{"title":"jQuery","description":"","layout":"guide","weight":100,"clayTaglib":"Vanilla or Metal.js","content":"AUI.$ returns a jQuery nodeList with many methods available. Replacing it with document.querySelector or document.querySelectorAll we lose all that methods. How to migrate: Replace AUI.$(selector) with document.querySelector(selector) if expected result is one node. Replace AUI.$(selector) with document.querySelectorAll(selector) if expected result is more than one node. In this case you will have to iterate over the array to execute methods on each node if needed. Migrate methods: Some methods can't be directly replaced with native implementations so we may need to use some utilities from metal like metal-dom. To do it we need to import the module in the jsp in the following way. let dom = metalDomSrcDom.default; ... let domData = metalDomSrcDomData.default; ... Direct replacements jQuery | replacement --- | --- .addClass() | dom.addClasses(element, classes) .append() | dom.append(parent, child) .attr(attribute) | .getAttribute(attribute) .attr(attribute, value) | .setAttribute(attribute, value) .closest() | TODO .collapse() | TODO .data() | domData.get(element, 'propertyName') .data(value) | domData.set(element, 'propertyName', value) .each() | .forEach .find() | .querySelector() or querySelectorAll() .formToArray() | TODO .html() | .innerHTML .html(value) | .innerHTML = value .map() | [...document.querySelectorAll(selector)].map() .on() | addEventListener() .one() | dom.once(element, eventName, fn) .prepend() | TODO .prop('property') | element.property .prop('property', value) | element.property = value .ready(fn) | document.addEventListener('DOMContentLoaded', fn, false) window.addEventListener('load', fn,false) .remove() | dom.exitDocument(element) toggleClass('class') | dom.toggleClasses(element, 'class') .tooltip() | TODO .val() | .value .val(newValue) | .value = newValue Code replacements Replace .ajaxSubmit() with: fetch(url, { body: new FormData(form), credentials: 'include', method: 'POST', ... }) .then(response = ...); Replace .load() with: fetch(url, data) .then(response = { element.innerHTML = response; }); Replace .serializeArray() with: form dom.exitDocument(element) Replace .sideNavigation() TODO. Replace .toggle() with: if (element.style.display === 'none') element.style.display = 'block'; else element.style.display = 'none'; ","srcFilePath":"src/pages/docs/javascript/jQuery.md","id":"jQuery","location":"/docs/javascript/jQuery.html","url":"/docs/javascript/jQuery.html"},"lodash":{"title":"Lodash","description":"","layout":"guide","weight":100,"clayTaglib":"Vanilla or Metal.js","content":" How to migrate: Direct replacements lodash | replacement --- | --- _.bind | to native .bind. _.bindKey | there's no direct replacement. _.escape | there's no direct replacement. _.groupBy | there's no direct replacement. _.isEqual | there's no direct replacement. _.map | to native Array.map. _.reduce | to native Array.reduce. _.unescape | there's no direct replacement. _.sub | there's no direct replacement. _.without | there's no direct replacement. Code replacements _.debounce to metal-debounce. let debounce = metalDebounceSrcDebounce.default; debounce(fn, time); _.forEach to .forEach or for in [1,2,3].forEach((item) = { console.log(item); }); let obj = {a:1, b:2, c:3}; for(key in obj) { console.log(item); } _.isFunction to function isFunction(fn) { return (!!fn && (\"object\" == typeof fn || \"function\" == typeof fn)) && toString.call(fn) == '[object Function]' } ","srcFilePath":"src/pages/docs/javascript/lodash.md","id":"lodash","location":"/docs/javascript/lodash.html","url":"/docs/javascript/lodash.html"}},"childIds":["lodash","jQuery"]},"lexicon":{"children":{"add_menu":{"title":"Add Menu","description":"","layout":"lexiconMigrationGuide","weight":100,"clayComponentLink":"https://claycss.com/docs/components/management_toolbar.html","lexiconPattern":"Add Menu","lexiconPatternLink":"https://lexicondesign.io/docs/patterns/Toolbars/management_bar.html","content":" How does it look like now (7.0) Changes for Lexicon 2.0 (7.1) Change | Reason --- | --- ① The add menu is moved into the Management Toolbar | _ How to apply it? _ | Action | Mandatory --- | --- | --- 1 | Locate the code in your application | ✔ 2 | Move the add menu into the management toolbar | ✔ [1] Locate the code in your application Locate the code responsible for rendering the add menu in your application. It should resemble something like the following snippet found in fragment-web/view.jsp: Locate the code responsible for rendering the management toolbar in your application. It should resemble something like the following snippet found in fragment-web/view.jsp: ... [2] Move the add menu into the management toolbar Move the part in charge of the search into the liferay-frontend:management-bar section, right after the last of the liferay-frontend-management-bar-buttons item like it's shown in the following snippet. ... Who has done it already? LPS | Pull Request | Master --- | --- | --- LPS-77502 | https://github.com/brianchandotcom/liferay-portal/pull/54812 | ✘ ","srcFilePath":"src/pages/docs/lexicon/add_menu.md","id":"add_menu","location":"/docs/lexicon/add_menu.html","url":"/docs/lexicon/add_menu.html"},"navigation_bar":{"title":"Navigation Bar","description":"","layout":"lexiconMigrationGuide","weight":100,"clayComponentLink":"https://claycss.com/docs/components/navbar.html","lexiconPattern":"Navigation Bar","lexiconPatternLink":"https://lexicondesign.io/docs/patterns/Navigation/horizontalNav.html","content":" How does it look like now (7.0) Changes for Lexicon 2.0 (7.1) Change | Reason --- | --- ① The Navigation Bar is dark in admin applications (and light outside of admin contexts) | The Navigation Bar reflects Application Sections and the color helps make this connection ② The general search is moved out of the Navigation Bar and into the Management Toolbar | Search applies to the current Application data set and not the application itself How to apply it? _ | Action | Mandatory --- | --- | --- 1 | Locate the code in your application | ✔ 2 | Move the search into the management toolbar | ✔ 3 | Use clay:navigation-bar instead of the old aui:navbar tag | ✔ 4 | Extract application sections from the Actions Menu | ✘ 5 | Move the navigation items definition into a Display Context | ✘ [1] Locate the code in your application Locate the code responsible for rendering the navigation in your application. It should resemble something like the following snippet found in blogs-web/blogs-admin/view.jsp: Locate the code responsible for rendering the management toolbar in your application. It should resemble something like the following snippet found in blogs-web/blogs-admin/view_entries.jsp: ... [2] Move the search into the management toolbar Move the part in charge of the search into the liferay-frontend:management-bar section, right after the last of the liferay-frontend-management-bar-filters item like it's shown in the following snippet. Notice how the usage of aui:nav-bar-search from the original snippet is no longer necessary, but an additional `` item needs to be added. ... [3] Use clay:navigation-bar instead of the old aui:navbar tag Start by adding the following imports to the imports section of your init.jsp file: // Import the clay tld file to be able to use the new tag // Import the NavigationItem utility class to create the items model Don't forget to add the dependencies with to the frontend-taglib-clay and fronteng.taglib.soy module in your build.gradle file: provided group: \"com.liferay\", name: \"com.liferay.frontend.taglib.soy\", version: \"1.0.0\" provided project(\":apps:foundation:frontend-taglib:frontend-taglib-clay\") Model your entries using the NavigationItem class and pass it down to the tag instance. The inverted attribute is set to true in all admin portlets. Instances in applications for live sites only can be left to false (default) Check out the following Sample usage of JSPNavigationItemList for more information about it. [4] Extract application sections from the Actions Menu This step is optional but recommended All Application Sections should be clearly visible in the Navigation Bar. Consider exploring what options your application currently has in the Actions Menu (find instances of *PortletConfigurationIcon) to find section candidates. [5] Move the navigation items definition into a Display Context This step is optional but recommended If your application already supports it (or even if it doesn't), consider moving the Java portion that generates the navigation items model into a *DisplayContext pattern to keep your jsps cleaner and server-free Check out the following Sample usage of NavigationItemList for more information about it. Who has done it already? LPS | Pull Request | Master --- | --- | --- LPS-77166 | https://github.com/brianchandotcom/liferay-portal/pull/54459 | ✘ ","srcFilePath":"src/pages/docs/lexicon/navigation_bar.md","id":"navigation_bar","location":"/docs/lexicon/navigation_bar.html","url":"/docs/lexicon/navigation_bar.html"}},"title":"Lexicon","description":"Everything you need to know to migrate old tabligs to Clay taglibs.","url":"/docs/lexicon/add_menu.html","weight":2,"icon":"heart","layout":false,"content":" ","srcFilePath":"src/pages/docs/lexicon/index.soy","id":"lexicon","location":"/docs/lexicon/","customURL":true,"childIds":["add_menu","navigation_bar"]}},"childIds":["javascript","lexicon","search"]}},"childIds":["docs"]}}